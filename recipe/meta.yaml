{% set version = "2022.10.31.00" %}  # PEP 386
{% set jemalloc_enabled = folly_build_ext is not undefined and folly_build_ext == "jemalloc" %}
### IMPORTANT: always keep the build number in build_string and in build/number equal!
{% set build_string = "h{}_1".format(PKG_HASH) %}
{% set build_string_ext = "{}_jemalloc".format(build_string) if jemalloc_enabled else build_string  %}

package:
  name: folly
  version: {{ version }}

source:
  url: https://github.com/facebook/folly/archive/v{{ version }}.tar.gz
  sha256: 46389ab812d010bd03de531e9a18f985ced23737fc26480393720e730821f7be

build:
  number: 1
  skip: true  # [win]
  string: {{ build_string_ext }}
  ignore_run_exports:
    - jemalloc  # [folly_build_ext is not undefined and folly_build_ext == "jemalloc"]

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - ninja
  host:
    - boost-cpp
    - double-conversion
    - fmt {{ fmt }}
    - gflags
    - glog
    - jemalloc  # [folly_build_ext is not undefined and folly_build_ext == "jemalloc"]
    - libaio  # [linux]
    - libevent
    - libsodium
    # snappy 1.1.9 breaks linking with folly, see https://github.com/facebook/folly/issues/1606
    - snappy 1.1.8
    - bzip2
    - lz4-c
    - openssl
    - xz
    - zlib
    - zstd
  run:
    - boost-cpp
    - jemalloc  # [folly_build_ext is not undefined and folly_build_ext == "jemalloc"]
    - snappy 1.1.8

test:
  requires:
    - {{ compiler('cxx') }}
  commands:
    - test -f ${PREFIX}/lib/libfolly${SHLIB_EXT}
    - test -f ${PREFIX}/include/folly/folly-config.h
    - $CXX $CXXFLAGS $LDFLAGS -lfolly $RECIPE_DIR/arena_test.c -o arena_test
    - test -f ./arena_test
    - ./arena_test

about:
  home: https://github.com/facebook/folly
  license: Apache-2.0
  license_file: LICENSE
  summary: Facebook Open-source Library
  description: |
    Folly (acronymed loosely after Facebook Open Source Library) is a
    library of C++14 components designed with practicality and
    efficiency in mind. Folly contains a variety of core library
    components used extensively at Facebook. In particular, it's often
    a dependency of Facebook's other open source C++ efforts and place
    where those projects can share code.
  doc_url: https://github.com/facebook/folly/tree/master/folly/docs
  dev_url: https://github.com/facebook/folly

extra:
  recipe-maintainers:
    - pearu
